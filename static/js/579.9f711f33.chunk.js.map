{"version":3,"file":"static/js/579.9f711f33.chunk.js","mappings":"oLACA,I,EAAA,EAAwB,2BAAxB,EAA2D,2BAA3D,EAA+F,4B,8BCClFA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAoB,SAAAH,GAAK,OAAIA,EAAMI,OAAOC,KAAM,EAChDC,EAAkB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,SAAU,EACpDC,EAAc,SAAAR,GAAK,OAAIA,EAAMC,SAASQ,KAAM,EAE5CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACZ,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAQ,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASX,EAAOU,cAAc,GAE7D,I,mBCPWE,EAAc,WACzB,IAAMf,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBmB,GAAWC,EAAAA,EAAAA,MAoBjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,cAAe,CACbX,KAAM,GACNY,OAAQ,IAEVC,SAnBe,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACtBhB,EAAiBc,EAAjBd,KAAMY,EAAWE,EAAXF,QAPO,SAAAZ,GACrB,OAAOZ,EAAS6B,MACd,SAAAlB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAa,GAEhE,CAKMiB,CAAelB,GAGjBK,GAASc,EAAAA,EAAAA,IAAW,CAAEnB,KAAAA,EAAMY,OAAAA,KAF5BQ,MAAM,GAADC,OAAIrB,EAAI,6BAKfgB,GACF,EAS6BP,UAEvBa,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAd,SAAA,EACHa,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAUhB,SAAA,CAAC,QAE3BF,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJF,UAAWC,EACXE,KAAK,OACL3B,KAAK,OACL4B,QAAQ,2HACRC,MAAM,yIACNC,YAAY,kBAGhBR,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAUhB,SAAA,CAAC,UAE3BF,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJF,UAAWC,EACXE,KAAK,MACL3B,KAAK,SACL4B,QAAQ,uGACRC,MAAM,+FACNE,UAAQ,EACRD,YAAY,sBAGhBvB,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAASH,UAAWC,EAAWhB,SAAC,sBAOvD,ECnEA,GAAgB,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,6BCI/GuB,EAAc,WACzB,IAAM5C,GAAWgB,EAAAA,EAAAA,IAAYP,GACvBQ,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIiB,UAAWC,EAAAA,KAAShB,SACrBrB,EAAS6C,KAAI,SAAAlB,GAAA,IAAGmB,EAAEnB,EAAFmB,GAAIlC,EAAIe,EAAJf,KAAMY,EAAMG,EAANH,OAAM,OAC/BU,EAAAA,EAAAA,MAAA,MAAIE,UAAWC,EAAAA,KAAShB,SAAA,EACtBa,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAAA,KAAShB,SAAA,CACpBT,EAAK,KAAGY,MAEXL,EAAAA,EAAAA,KAAA,UACEiB,UAAWC,EAAAA,OACXE,KAAK,SACLQ,QAAS,kBAAM9B,GAAS+B,EAAAA,EAAAA,IAAcF,GAAI,EAACzB,SAC5C,aAR2ByB,EAWzB,KAIb,E,UC1BA,EAAwB,sBAAxB,EAAsD,sBCIzCG,EAAS,WACpB,IAAM7C,GAAQY,EAAAA,EAAAA,IAAYd,GACpBe,GAAWC,EAAAA,EAAAA,MAEjB,OACEgB,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAUhB,SAAA,CAAC,yBAE3BF,EAAAA,EAAAA,KAAA,SACEiB,UAAWC,EACXE,KAAK,OACLnC,MAAOA,EACP8C,SAAU,SAAAC,GAAK,OAAIlC,GAASmC,EAAAA,EAAAA,GAAUD,EAAME,OAAOjD,OAAO,MAIlE,ECnBA,EAAwB,qBCEXkD,EAAQ,SAAH3B,GAAiB,IAAZc,EAAKd,EAALc,MACnB,OACItB,EAAAA,EAAAA,KAAA,MAAIiB,UAAWC,EAAUhB,SAAEoB,GAEnC,E,mBCLac,E,QAAQC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wEC2B/B,EAnBiB,WACf,IAAMzC,GAAWC,EAAAA,EAAAA,MACXZ,GAAYU,EAAAA,EAAAA,IAAYX,GACxBG,GAAQQ,EAAAA,EAAAA,IAAYT,GAK1B,OAHAoD,EAAAA,EAAAA,YAAU,WACR1C,GAAS2C,EAAAA,EAAAA,MACX,GAAG,CAAC3C,KAEFiB,EAAAA,EAAAA,MAACqB,EAAK,CAAAlC,SAAA,EACJF,EAAAA,EAAAA,KAACmC,EAAK,CAACb,MAAM,eACbtB,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAACmC,EAAK,CAACb,MAAM,cACbtB,EAAAA,EAAAA,KAAC8B,EAAM,IACN3C,IAAcE,IAASW,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4BAC3BF,EAAAA,EAAAA,KAACyB,EAAW,MAGlB,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selector.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/TitlePhone.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectValueFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectValueFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { Formik, Field, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selector';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const isContactExist = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n    if (isContactExist(name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <label className={css.label}>\n            Name\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Jane Snow\"\n            />\n          </label>\n          <label className={css.label}>\n            Number\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"XXX-XX-XX-XXX\"\n            />\n          </label>\n          <button type=\"submit\" className={css.button}>\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"name\":\"ContactList_name__UCkFW\",\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\nimport { selectVisibleContacts } from 'redux/contacts/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.itrm} key={id}>\n          <p className={css.name}>\n            {name}: {number}\n          </p>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { setFilter } from 'redux/contacts/filterSlice';\nimport { selectValueFilter } from 'redux/contacts/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const value = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import PropTypes  from 'prop-types'\nimport css from './Title.module.css'\n\nexport const Title = ({title}) => {\n    return (\n        <h2 className={css.title}>{title}</h2>\n    )\n}\n\nTitle.propTypes = {\n   title: PropTypes.string.isRequired\n}","import styled from 'styled-components';\n\nexport const Block = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 400px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from 'components/Title/TitlePhone';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selector';\nimport { Block } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Block>\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Block>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectValueFilter","filter","value","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","Formik","initialValues","number","onSubmit","values","_ref","resetForm","some","isContactExist","addContact","alert","concat","_jsxs","Form","className","css","Field","type","pattern","title","placeholder","required","ContactList","map","id","onClick","deleteContact","Filter","onChange","event","setFilter","target","Title","Block","styled","_templateObject","_taggedTemplateLiteral","useEffect","fetchContacts"],"sourceRoot":""}